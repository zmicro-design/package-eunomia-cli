#!/bin/bash

install() {
  # prepare vars
  local name="$PACKAGE_CORE_NAME"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  if [ "$PLUGIN_PACKAGE_NO_CHECK_LATEST" != "true" ]; then
    # get latest version
    log::info "[$(timestamp)][package][$name] checking latest version ..."
    local latest_version=$(curl $PACKAGE_CORE_LATEST_VERSION)
    if [ "$?" != "0" ]; then
      log::error "[$(timestamp)][package][$name] failed to get latest version ."
      return 1
    fi
    if [ "$latest_version" = "" ]; then
      log::error "[$(timestamp)][package][$name] failed to get latest version(empty, maybe network error)."
      return 1
    fi
    PACKAGE_CORE_VERSION=$latest_version
    log::success "[$(timestamp)][package][$name] latest version: $PACKAGE_CORE_VERSION"
  fi

  # files
  local tmp_file="$name.tar.gz"
  local bin_file="./$name"

  # reference: https://github.com/go-zoox/gzterminal/releases
  # example:
  #   http://10.27.249.150:8888/eunomia/shared/raw/master/eunomia-cli/v1.4.6/eunomia-cli_1.4.6_darwin_amd64.tar.gz
  #   http://10.27.249.150:8888/eunomia/shared/raw/master/eunomia-cli/v1.4.6/eunomia-cli_1.4.6_darwin_arm64.tar.gz
  #   http://10.27.249.150:8888/eunomia/shared/raw/master/eunomia-cli/v1.4.6/eunomia-cli_1.4.6_linux_amd64.tar.gz
  #   http://10.27.249.150:8888/eunomia/shared/raw/master/eunomia-cli/v1.4.6/eunomia-cli_1.4.6_linux_arm64.tar.gz
  # generate url
  local url="${PACKAGE_CORE_RELEASE_DOWNLOAD}/${name}/$PACKAGE_CORE_VERSION/${name}_${PACKAGE_CORE_VERSION#v}_${platform}_${arch}.tar.gz"
  log::debug "[$(timestamp)][package][$name][$kernel][$arch] url: $url, file: ${tmp_file}, tmp_dir: $tmp_dir"

  log::info "[$(timestamp)][package][$name] os: $os"
  log::info "[$(timestamp)][package][$name] arch: $arch"
  log::info "[$(timestamp)][package][$name] kernel: $kernel"
  log::info "[$(timestamp)][package][$name] platform: $platform"
  log::info "[$(timestamp)][package][$name] usr_bin_dir: $usr_bin_dir"
  log::info "[$(timestamp)][package][$name] source_bin_file: $source_bin_file"
  log::info "[$(timestamp)][package][$name] url: $url"
  log::info "[$(timestamp)][package][$name] tmp_dir: $tmp_dir"
  log::info "[$(timestamp)][package][$name] tmp_file: $tmp_file"
  if [ -n "$PLUGIN_PACKAGE_INSTALL_MODE" ]; then
    log::info "[$(timestamp)][package][$name] mode: $PLUGIN_PACKAGE_INSTALL_MODE"
  fi

  # prepare context
  cd $tmp_dir

  # download
  log::info "[$(timestamp)][package][$name] downloading ..."
  os::download $tmp_file $url

  # extract
  log::info "[$(timestamp)][package][$name] extracting ..."
  os::extract $tmp_file

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  os::install $bin_file $usr_bin_dir

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
